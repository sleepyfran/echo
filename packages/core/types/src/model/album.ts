import { Brand, Option } from "effect";
import type { Artist } from "./artist";
import type { ProviderId } from "./provider-metadata";
import type { Track } from "./track";

/**
 * Wrapper around a string to represent an album id.
 */
export type AlbumId = string & Brand.Brand<"AlbumId">;
export const AlbumId = Brand.nominal<AlbumId>();

/**
 * Represents an album in the user's library.
 */
export type Album = {
  /**
   * Unique identifier for the album, either provided by a third-party (when
   * syncing against API-based services) or generated by the application. If the
   * ID is from a third-party, the first three characters of the service name
   * followed by a colon are prepended to the ID. Example: `spo:id` for an ID
   * generated by the Spotify API.
   */
  id: AlbumId;

  /**
   * Artist of the album.
   */
  artist: Artist;

  /**
   * Name of the album.
   */
  name: string;

  /**
   * Year in which the album was released.
   */
  releaseYear: Option.Option<number>;

  /**
   * Cover art of the album as a blob.
   */
  embeddedCover: Option.Option<Blob>;

  /**
   * Provider that hosts the album.
   */
  providerId: ProviderId;

  /**
   * Genres that the album belongs to.
   */
  genres: string[];

  /**
   * Tracks and all their metadata of the album.
   */
  tracks: Track[];
};
