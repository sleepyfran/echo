import * as S from "@effect/schema/Schema";
import { GenericId } from "./common";

/**
 * Wrapper around a string to represent an artist id.
 */
export const ArtistId = S.Union(S.String.pipe(S.startsWith("spo:")), GenericId);
export type ArtistId = S.Schema.Type<typeof ArtistId>;

/**
 * Represents an artist in the user's library.
 */
export const Artist = S.Struct({
  /**
   * Unique identifier for the artist, either provided by a third-party (when
   * syncing against API-based services) or generated by the application. If the
   * ID is from a third-party, the first three characters of the service name
   * followed by a colon are prepended to the ID. Example: `spo:id` for an ID
   * generated by the Spotify API.
   */
  id: ArtistId,

  /**
   * Name of the artist.
   */
  name: S.String.pipe(S.nonEmpty()),

  /**
   * URL to an image of the artist. This is typically the artist's profile
   * picture on a third-party service. If none is available, this field is
   * omitted.
   */
  imageUrl: S.Option(S.String),
});
